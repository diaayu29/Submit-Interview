{"version":3,"sources":["components/uielements/upload.js","components/contacts/deleteButton.js","components/contacts/contactList.style.js","components/contacts/contactList.js","components/contacts/contactCard.style.js","components/contacts/singleView.js","components/contacts/editView.js","containers/Contacts/contacts.style.js","containers/Contacts/index.js"],"names":["antd__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Upload","_this$props","this","props","contact","deleteContact","name","firstName","concat","lastName","react_default","a","createElement","popconfirm","title","okText","cancelText","onConfirm","notification","id","uielements_button","icon","type","className","Component","WDContactListWrapper","styled","div","_templateObject","palette","boxShadow","borderRadius","transition","ContactListWrapper","WithDirection","ContactList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","singleContact","bind","assertThisInitialized","onChange","state","search","seectedId","changeContact","activeClass","key","onClick","avatar","alt","src","deleteButton_default","event","setState","target","value","_this2","contacts","toUpperCase","filter","includes","filterContacts","input","placeholder","context","intl","formatMessage","length","customScrollBar","map","intlMessages","contextTypes","PropTypes","object","isRequired","WDContactCardWrapper","contactCard_style_templateObject","ContactCardWrapper","otherAttributes","extraInfos","forEach","attribute","push","beforeUpload","file","size","toConsumableArray","editContact","rows","upload","showUploadList","action","WDContactsWrapper","contacts_style_templateObject","ContactsWrapper","contactAction","addContact","viewChange","Content","Layout","Contacts","editView","selectedContact","style","background","contactList_ContactList","layout","editView_default","singleView_default","connect","_state$Contacts"],"mappings":"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","file":"static/js/54.142c6bfc.chunk.js","sourcesContent":["import { Upload } from 'antd';\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport Popconfirm from '../feedback/popconfirm';\r\nimport Button from '../uielements/button';\r\nimport notification from '../notification';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, deleteContact } = this.props;\r\n    let name = '';\r\n    if (contact.firstName) {\r\n      name = `${contact.firstName} `;\r\n    }\r\n    if (contact.lastName) {\r\n      name = `${name}${contact.lastName}`;\r\n    }\r\n    if (!name) {\r\n      name = 'No Name';\r\n    }\r\n    return (\r\n      <Popconfirm\r\n        title={`Sure to delete ${name}?`}\r\n        okText=\"DELETE\"\r\n        cancelText=\"No\"\r\n        onConfirm={() => {\r\n          notification('error', `${name} Deleted`, '');\r\n          deleteContact(contact.id);\r\n        }}\r\n      >\r\n        <Button icon=\"close\" type=\"default\" className=\"isoDeleteBtn\" />\r\n      </Popconfirm>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDContactListWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  .isoNoResultMsg {\r\n    padding: 15px 20px;\r\n    text-align: center;\r\n    color: ${palette('secondary', 2)};\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .isoSearchBar {\r\n    .ant-input {\r\n      width: 100%;\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('text', 0)};\r\n      line-height: inherit;\r\n      height: 69px;\r\n      padding: 0 20px;\r\n      padding-left: ${props =>\r\n        props['data-rtl'] === 'rtl' ? 'inherit' : '35px'};\r\n      padding-right: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '35px' : 'inherit'};\r\n      border: 0;\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      outline: 0 !important;\r\n      overflow: hidden;\r\n      background-color: #ffffff;\r\n      ${boxShadow('none')};\r\n      ${borderRadius()};\r\n      ${transition()};\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        height: 50px;\r\n      }\r\n\r\n      &:hover,\r\n      &:focus {\r\n        border-color: ${palette('border', 0)} !important;\r\n      }\r\n\r\n      &::-webkit-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &:-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &::-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n      &:-ms-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-input-suffix {\r\n    left: 10px;\r\n    right: auto;\r\n    color: ${palette('grayscale', 0)};\r\n  }\r\n\r\n  .isoContactList {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n\r\n    .contactListScrollbar {\r\n      height: calc(100vh - 200px);\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        max-height: 60vh;\r\n      }\r\n    }\r\n\r\n    .isoSingleContact {\r\n      width: 100%;\r\n      margin: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      flex-shrink: 0;\r\n      padding: 15px 20px;\r\n      padding-right: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '20px' : '35px'};\r\n      padding-left: ${props => (props['data-rtl'] === 'rtl' ? '35px' : '20px')};\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      &.active {\r\n        background-color: ${palette('secondary', 1)};\r\n      }\r\n\r\n      &:last-child {\r\n        border-bottom: 0;\r\n      }\r\n\r\n      .isoAvatar {\r\n        width: 35px;\r\n        height: 35px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n        flex-shrink: 0;\r\n        overflow: hidden;\r\n        ${borderRadius('50%')};\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n        }\r\n      }\r\n\r\n      .isoContactName {\r\n        h3 {\r\n          font-size: 15px;\r\n        }\r\n      }\r\n\r\n      .isoNoteText {\r\n        width: calc(100% - 60px);\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '20px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '20px' : 'inherit'};\r\n        padding: 20px 0;\r\n        cursor: pointer;\r\n\r\n        h3 {\r\n          width: 100%;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          color: ${palette('secondary', 2)};\r\n          font-weight: 500;\r\n        }\r\n\r\n        .isoNoteCreatedDate {\r\n          font-size: 13px;\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n\r\n      .isoDeleteBtn {\r\n        width: 24px;\r\n        height: 24px;\r\n        background-color: transparent;\r\n        flex-shrink: 0;\r\n        position: absolute;\r\n        top: 20px;\r\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\r\n        left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 14px;\r\n        color: ${palette('grayscale', 0)};\r\n        ${transition()};\r\n\r\n        &:hover {\r\n          color: ${palette('primary', 0)};\r\n        }\r\n      }\r\n    }\r\n\r\n    .isoNotlistNotice {\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('grayscale', 0)};\r\n      line-height: inherit;\r\n      padding: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactListWrapper = WithDirection(WDContactListWrapper);\r\n\r\nexport { ContactListWrapper };\r\n","import React, { Component } from 'react';\r\nimport IntlMessages from '../utility/intlMessages';\r\nimport { InputSearch } from '../uielements/input';\r\nimport DeleteButton from './deleteButton';\r\nimport { PropTypes } from 'prop-types';\r\nimport { ContactListWrapper } from './contactList.style';\r\nimport Scrollbar from '../utility/customScrollBar';\r\n\r\nfunction filterContacts(contacts, search) {\r\n  search = search.toUpperCase();\r\n  return search\r\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\r\n    : contacts;\r\n}\r\n\r\nexport default class ContactList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.singleContact = this.singleContact.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.state = {\r\n      search: '',\r\n    };\r\n  }\r\n  singleContact(contact) {\r\n    const { seectedId, deleteContact, changeContact } = this.props;\r\n    const activeClass = seectedId === contact.id ? 'active' : '';\r\n    const onChange = () => changeContact(contact.id);\r\n    return (\r\n      <div\r\n        key={contact.id}\r\n        className={`${activeClass} isoSingleContact`}\r\n        onClick={onChange}\r\n      >\r\n        <div className=\"isoAvatar\">\r\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\r\n        </div>\r\n        <div className=\"isoContactName\">\r\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\r\n        </div>\r\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\r\n      </div>\r\n    );\r\n  }\r\n  onChange(event) {\r\n    this.setState({ search: event.target.value });\r\n  }\r\n  render() {\r\n    const { search } = this.state;\r\n    const contacts = filterContacts(this.props.contacts, search);\r\n    return (\r\n      <ContactListWrapper className=\"isoContactListWrapper\">\r\n        <InputSearch\r\n          placeholder={this.context.intl.formatMessage({\r\n            id: 'contactlist.searchContacts',\r\n          })}\r\n          value={search}\r\n          onChange={this.onChange}\r\n          className=\"isoSearchBar\"\r\n        />\r\n        {contacts && contacts.length > 0 ? (\r\n          <div className=\"isoContactList\">\r\n            <Scrollbar className=\"contactListScrollbar\">\r\n              {contacts.map(contact => this.singleContact(contact))}\r\n            </Scrollbar>\r\n          </div>\r\n        ) : (\r\n          <span className=\"isoNoResultMsg\">\r\n            {<IntlMessages id=\"Component.contacts.noOption\" />}\r\n          </span>\r\n        )}\r\n      </ContactListWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.contextTypes = {\r\n  intl: PropTypes.object.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDContactCardWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 145px);\r\n  padding: 0 35px;\r\n  display: -webkit-flex;\r\n  display: -ms-flex;\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 0 20px;\r\n  }\r\n\r\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .isoContactCardHead {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 120px;\r\n    flex-shrink: 0;\r\n    margin-right: ${props =>\r\n      props['data-rtl'] === 'rtl' ? 'inherit' : '50px'};\r\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '50px' : 'inherit')};\r\n    flex-shrink: 0;\r\n\r\n    @media only screen and (max-width: 600px) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .isoPersonImage {\r\n      width: 120px;\r\n      height: 120px;\r\n      display: flex;\r\n      flex-shrink: 0;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-bottom: 10px;\r\n      overflow: hidden;\r\n      ${borderRadius('5px')};\r\n\r\n      .avatar-uploader {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .isoPersonName {\r\n      font-size: 15px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      line-height: 1.5;\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  .isoContactInfoWrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      padding: 20px 0;\r\n    }\r\n\r\n    .isoContactCardInfos {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-shrink: 0;\r\n      align-items: baseline;\r\n      flex-direction: row;\r\n      margin-bottom: 15px;\r\n\r\n      @media only screen and (max-width: 430px) {\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .isoInfoLabel {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        color: ${palette('text', 0)};\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        min-width: 80px;\r\n        position: relative;\r\n\r\n        @media only screen and (max-width: 430px) {\r\n          margin-bottom: 5px;\r\n          margin-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n          margin-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n          padding-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\r\n          padding-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\r\n          min-width: 0;\r\n        }\r\n\r\n        &::after {\r\n          content: ':';\r\n          position: absolute;\r\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\r\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\r\n        }\r\n      }\r\n\r\n      .isoInfoDetails {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n      }\r\n\r\n      input {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: inherit;\r\n        height: 36px;\r\n        padding: 0 15px;\r\n        margin: 0;\r\n        border: 1px solid ${palette('border', 0)};\r\n        outline: 0 !important;\r\n        overflow: hidden;\r\n        background-color: #ffffff;\r\n        ${boxShadow('none')};\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        &:focus {\r\n          border-color: ${palette('primary', 0)};\r\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\r\n          outline: 0;\r\n        }\r\n\r\n        &:hover {\r\n          border-color: ${palette('primary', 0)};\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &:-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &::-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n        &:-ms-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n\r\n      textarea {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: 24px;\r\n        height: 210px;\r\n        padding: 10px 15px;\r\n        margin: 0;\r\n        border: 1px solid ${palette('border', 0)};\r\n        outline: 0 !important;\r\n        background-color: #ffffff;\r\n        ${boxShadow('none')};\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        &:focus {\r\n          border-color: ${palette('primary', 0)};\r\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\r\n          outline: 0;\r\n        }\r\n\r\n        &:hover {\r\n          border-color: ${palette('primary', 0)};\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &:-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &::-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n        &:-ms-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactCardWrapper = WithDirection(WDContactCardWrapper);\r\n\r\nexport { ContactCardWrapper };\r\n","import React, { Component } from 'react';\r\nimport { ContactCardWrapper } from './contactCard.style';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, otherAttributes } = this.props;\r\n    const name = contact.name ? contact.name : 'No Name';\r\n    const extraInfos = [];\r\n    otherAttributes.forEach(attribute => {\r\n      const value = contact[attribute.value];\r\n      if (value) {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <p className=\"isoInfoDetails\">{value}</p>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <ContactCardWrapper className=\"isoContactCard\">\r\n        <div className=\"isoContactCardHead\">\r\n          <div className=\"isoPersonImage\">\r\n            {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\r\n          </div>\r\n          <h1 className=\"isoPersonName\">{name}</h1>\r\n        </div>\r\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\r\n      </ContactCardWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'antd';\r\nimport Input, { Textarea } from '../uielements/input';\r\nimport Upload from '../uielements/upload';\r\nimport notification from '../notification';\r\nimport { ContactCardWrapper } from './contactCard.style';\r\nimport './upload.css';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    notification('error', 'You can only upload JPG file!', '');\r\n    return false;\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    notification('error', 'Image must smaller than 2MB!', '');\r\n    return false;\r\n  }\r\n  notification('success', 'Image uploaded successfully!', '');\r\n  return true;\r\n}\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, otherAttributes } = this.props;\r\n    const name = contact.name ? contact.name : 'No Name';\r\n    const extraInfos = [];\r\n    const names = [\r\n      { value: 'firstName', title: 'First Name' },\r\n      { value: 'lastName', title: 'Last Name' }\r\n    ];\r\n    [...names, ...otherAttributes].forEach(attribute => {\r\n      const value = contact[attribute.value];\r\n      const editContact = event => {\r\n        contact[attribute.value] = event.target.value;\r\n        let name = '';\r\n        if (contact.firstName) {\r\n          name = `${contact.firstName} `;\r\n        }\r\n        if (contact.lastName) {\r\n          name = `${name}${contact.lastName}`;\r\n        }\r\n        contact.name = name;\r\n        this.props.editContact(contact);\r\n      };\r\n      if (attribute.value === 'note') {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <Textarea\r\n              placeholder={`${attribute.title}`}\r\n              value={value}\r\n              type=\"textarea\"\r\n              rows={5}\r\n              onChange={event => editContact(event)}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <Input\r\n              placeholder={`${attribute.title}`}\r\n              value={value}\r\n              onChange={event => editContact(event)}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <ContactCardWrapper className=\"isoContactCard\">\r\n        <div className=\"isoContactCardHead\">\r\n          <div className=\"isoPersonImage\">\r\n            <Upload\r\n              className=\"avatar-uploader\"\r\n              name=\"avatar\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              action=\"\"\r\n            >\r\n              {contact.avatar ? (\r\n                <img src={contact.avatar} alt=\"\" className=\"avatar\" />\r\n              ) : (\r\n                ''\r\n              )}\r\n              <Icon type=\"plus\" className=\"avatar-uploader-trigger\" />\r\n            </Upload>\r\n          </div>\r\n          <h1 className=\"isoPersonName\">{name}</h1>\r\n        </div>\r\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\r\n      </ContactCardWrapper>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\nimport { transition, borderRadius } from \"../../settings/style-util\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\n\r\nconst WDContactsWrapper = styled.div`\r\n  padding: 50px 35px;\r\n  display: flex;\r\n  ${\"\" /* max-height: calc(100vh - 130px); */} @media only screen and (max-width: 767px) {\r\n    padding: 50px 20px;\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n\r\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n    padding: 40px 30px;\r\n  }\r\n\r\n  .isoContactListBar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 0;\r\n    background: #ffffff;\r\n    border: 1px solid ${palette(\"border\", 0)};\r\n    width: 320px;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      width: auto !important;\r\n      margin-bottom: 20px;\r\n      min-width: 0 !important;\r\n      max-width: 100% !important;\r\n      flex: 0 !important;\r\n    }\r\n\r\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n      width: 270px !important;\r\n      flex: 0 0 270px !important;\r\n    }\r\n  }\r\n\r\n  .isoContactBoxWrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    background-color: #ffffff;\r\n    border: 1px solid ${palette(\"border\", 0)};\r\n    border-left: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\")};\r\n    border-right: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\")};\r\n    position: relative;\r\n\r\n    .isoContactBox {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .contactBoxScrollbar {\r\n      height: calc(100vh - 225px);\r\n    }\r\n\r\n    .isoContactControl {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      flex-shrink: 0;\r\n      padding: 30px;\r\n      background-color: #ffffff;\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        padding: 30px 20px;\r\n      }\r\n\r\n      button:not(.isoAddContactBtn) {\r\n        font-size: 16px;\r\n        color: ${palette(\"secondary\", 0)};\r\n        width: 35px;\r\n        height: 35px;\r\n        display: flex;\r\n        align-items: center;\r\n        text-align: center;\r\n        justify-content: center;\r\n        background-color: #ffffff;\r\n        outline: 0;\r\n        padding: 0;\r\n        border: 1px solid ${palette(\"border\", 0)};\r\n        margin-left: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"-1px\"};\r\n        margin-right: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"-1px\" : \"inherit\"};\r\n        cursor: pointer;\r\n        ${borderRadius()};\r\n        ${transition()};\r\n\r\n        i {\r\n          width: 100%;\r\n        }\r\n\r\n        span {\r\n          display: none;\r\n        }\r\n\r\n        &:first-child {\r\n          margin-left: ${props =>\r\n            props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\"};\r\n          margin-right: ${props =>\r\n            props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\"};\r\n        }\r\n\r\n        &:hover {\r\n          color: ${palette(\"primary\", 0)};\r\n          background-color: ${palette(\"grayscale\", 7)};\r\n        }\r\n      }\r\n\r\n      .isoAddContactBtn {\r\n        background-color: ${palette(\"primary\", 0)};\r\n        border: 0;\r\n        height: 30px;\r\n        padding: 0 15px;\r\n        margin-left: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"auto\"};\r\n        margin-right: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"auto\" : \"inherit\"};\r\n        ${borderRadius(\"3px\")};\r\n        ${transition()};\r\n\r\n        span {\r\n          font-size: 12px;\r\n          font-weight: 400;\r\n          padding: 0;\r\n          text-transform: uppercase;\r\n          color: #ffffff;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${palette(\"primary\", 1)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactsWrapper = WithDirection(WDContactsWrapper);\r\n\r\nexport { ContactsWrapper };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactAction from '../../redux/contacts/actions';\r\nimport { Layout, Icon } from 'antd';\r\nimport Button from '../../components/uielements/button';\r\nimport ContactList from '../../components/contacts/contactList';\r\nimport SingleContactView from '../../components/contacts/singleView';\r\nimport EditContactView from '../../components/contacts/editView';\r\nimport DeleteButton from '../../components/contacts/deleteButton';\r\nimport { otherAttributes } from './fakeData';\r\nimport IntlMessages from '../../components/utility/intlMessages';\r\nimport { ContactsWrapper } from './contacts.style';\r\nimport Scrollbar from '../../components/utility/customScrollBar.js';\r\n\r\nconst {\r\n  changeContact,\r\n  addContact,\r\n  editContact,\r\n  deleteContact,\r\n  viewChange,\r\n} = contactAction;\r\n\r\nconst { Content } = Layout;\r\nclass Contacts extends Component {\r\n  render() {\r\n    const {\r\n      contacts,\r\n      seectedId,\r\n      editView,\r\n      changeContact,\r\n      addContact,\r\n      editContact,\r\n      deleteContact,\r\n      viewChange,\r\n    } = this.props;\r\n    const selectedContact = seectedId\r\n      ? contacts.filter(contact => contact.id === seectedId)[0]\r\n      : null;\r\n    const onVIewChange = () => viewChange(!editView);\r\n    return (\r\n      <ContactsWrapper\r\n        className=\"isomorphicContacts\"\r\n        style={{ background: 'none' }}\r\n      >\r\n        <div className=\"isoContactListBar\">\r\n          <ContactList\r\n            contacts={contacts}\r\n            seectedId={seectedId}\r\n            changeContact={changeContact}\r\n            deleteContact={deleteContact}\r\n          />\r\n        </div>\r\n        <Layout className=\"isoContactBoxWrapper\">\r\n          {selectedContact ? (\r\n            <Content className=\"isoContactBox\">\r\n              <div className=\"isoContactControl\">\r\n                <Button type=\"default\" onClick={onVIewChange}>\r\n                  {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}{' '}\r\n                </Button>\r\n                <DeleteButton\r\n                  deleteContact={deleteContact}\r\n                  contact={selectedContact}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={addContact}\r\n                  className=\"isoAddContactBtn\"\r\n                >\r\n                  <IntlMessages id=\"contactlist.addNewContact\" />\r\n                </Button>\r\n              </div>\r\n\r\n              <Scrollbar className=\"contactBoxScrollbar\">\r\n                {editView ? (\r\n                  <EditContactView\r\n                    contact={selectedContact}\r\n                    editContact={editContact}\r\n                    otherAttributes={otherAttributes}\r\n                  />\r\n                ) : (\r\n                  <SingleContactView\r\n                    contact={selectedContact}\r\n                    otherAttributes={otherAttributes}\r\n                  />\r\n                )}\r\n              </Scrollbar>\r\n            </Content>\r\n          ) : (\r\n            <div className=\"isoContactControl\">\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={addContact}\r\n                className=\"isoAddContactBtn\"\r\n              >\r\n                <IntlMessages id=\"contactlist.addNewContact\" />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Layout>\r\n      </ContactsWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { contacts, seectedId, editView } = state.Contacts;\r\n  return {\r\n    contacts,\r\n    seectedId,\r\n    editView,\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeContact,\r\n    addContact,\r\n    editContact,\r\n    deleteContact,\r\n    viewChange,\r\n  }\r\n)(Contacts);\r\n"],"sourceRoot":""}