{"version":3,"sources":["../node_modules/lodash/_setToArray.js","../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/find.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/node_modules/moment/moment.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","set","index","result","Array","size","forEach","value","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","baseIsEqual","other","find","createFind","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","weight","addBox","Arc","Point","Rectangle","baseIteratee","isArrayLike","findIndexFunc","collection","predicate","fromIndex","iterable","iteratee","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","toString","isObject","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","get","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","date","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","chunk","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeek","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","initializer","accumulator","baseEach"],"mappings":"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","file":"static/js/4.c90dbd75.chunk.js","sourcesContent":["/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n      date.setFullYear(y);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(y);\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    if (!m) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];\n    }\n\n    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from begining of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to begining of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {\n      milliseconds: 0,\n      months: 0\n    };\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units || 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  function startOf(units) {\n    units = normalizeUnits(units); // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n\n    switch (units) {\n      case 'year':\n        this.month(0);\n\n      /* falls through */\n\n      case 'quarter':\n      case 'month':\n        this.date(1);\n\n      /* falls through */\n\n      case 'week':\n      case 'isoWeek':\n      case 'day':\n      case 'date':\n        this.hours(0);\n\n      /* falls through */\n\n      case 'hour':\n        this.minutes(0);\n\n      /* falls through */\n\n      case 'minute':\n        this.seconds(0);\n\n      /* falls through */\n\n      case 'second':\n        this.milliseconds(0);\n    } // weeks are a special case\n\n\n    if (units === 'week') {\n      this.weekday(0);\n    }\n\n    if (units === 'isoWeek') {\n      this.isoWeekday(1);\n    } // quarters are also special\n\n\n    if (units === 'quarter') {\n      this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n  }\n\n  function endOf(units) {\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond') {\n      return this;\n    } // 'date' is an alias for 'day', so it should be considered as such.\n\n\n    if (units === 'date') {\n      units = 'day';\n    }\n\n    return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.22.2';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}